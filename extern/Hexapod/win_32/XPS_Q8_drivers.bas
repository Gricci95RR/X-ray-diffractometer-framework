'*************************************************************************************
'* 
'* Visual Basic module for use XPS_Q8_drivers.dll create with XPS-Q8 Firmware Precision Platform V1.4.x
'* 
'*************************************************************************************

Declare Function TCP_ConnectToServer Lib "XPS_Q8_drivers.dll" (ByVal Ip_Address As String, ByVal Ip_Port As Long, ByVal TimeOut As Double) As Long
Declare Sub TCP_SetTimeout Lib "XPS_Q8_drivers.dll" (ByVal SocketIndex As Long, ByVal Timeout As Double)
Declare Sub TCP_CloseSocket Lib "XPS_Q8_drivers.dll" (ByVal SocketIndex As Long)
Declare Function TCP_GetError Lib "XPS_Q8_drivers.dll" (ByVal SocketIndex As Long) As String
Declare Function GetLibraryVersion Lib "XPS_Q8_drivers.dll" () As String
Declare Function ControllerMotionKernelTimeLoadGet Lib "XPS_Q8_drivers.dll" (ByVal SocketIndex As Long, CPUTotalLoadRatio As Double, CPUCorrectorLoadRatio As Double, CPUProfilerLoadRatio As Double, CPUServitudesLoadRatio As Double) As Integer '  Get controller motion kernel time load
Declare Function ControllerRTTimeGet Lib "XPS_Q8_drivers.dll" (ByVal SocketIndex As Long, CurrentRTPeriod As Double, CurrentRTUsage As Double) As Integer '  Get controller corrector period and calculation time
Declare Function ControllerSlaveStatusGet Lib "XPS_Q8_drivers.dll" (ByVal SocketIndex As Long, SlaveControllerStatus As Integer) As Integer '  Read slave controller status
Declare Function ControllerSlaveStatusStringGet Lib "XPS_Q8_drivers.dll" (ByVal SocketIndex As Long, ByVal SlaveControllerStatusCode As Integer, ByVal SlaveControllerStatusString As String) As Integer '  Return the slave controller status string
Declare Function ControllerSynchronizeCorrectorISR Lib "XPS_Q8_drivers.dll" (ByVal SocketIndex As Long, ByVal ModeString As String) As Integer '  Synchronize controller corrector ISR
Declare Function ControllerStatusGet Lib "XPS_Q8_drivers.dll" (ByVal SocketIndex As Long, ControllerStatus As Integer) As Integer '  Get controller current status and reset the status
Declare Function ControllerStatusRead Lib "XPS_Q8_drivers.dll" (ByVal SocketIndex As Long, ControllerStatus As Integer) As Integer '  Read controller current status
Declare Function ControllerStatusStringGet Lib "XPS_Q8_drivers.dll" (ByVal SocketIndex As Long, ByVal ControllerStatusCode As Integer, ByVal ControllerStatusString As String) As Integer '  Return the controller status string
Declare Function ElapsedTimeGet Lib "XPS_Q8_drivers.dll" (ByVal SocketIndex As Long, ElapsedTime As Double) As Integer '  Return elapsed time from controller power on
Declare Function ErrorStringGet Lib "XPS_Q8_drivers.dll" (ByVal SocketIndex As Long, ByVal ErrorCode As Integer, ByVal ErrorString As String) As Integer '  Return the error string corresponding to the error code
Declare Function FirmwareVersionGet Lib "XPS_Q8_drivers.dll" (ByVal SocketIndex As Long, ByVal Version As String) As Integer '  Return firmware version
Declare Function InstallerVersionGet Lib "XPS_Q8_drivers.dll" (ByVal SocketIndex As Long, ByVal Version As String) As Integer '  Return installer version
Declare Function TCLScriptExecute Lib "XPS_Q8_drivers.dll" (ByVal SocketIndex As Long, ByVal TCLFileName As String, ByVal TaskName As String, ByVal ParametersList As String) As Integer '  Execute a TCL script from a TCL file
Declare Function TCLScriptExecuteAndWait Lib "XPS_Q8_drivers.dll" (ByVal SocketIndex As Long, ByVal TCLFileName As String, ByVal TaskName As String, ByVal InputParametersList As String, ByVal OutputParametersList As String) As Integer '  Execute a TCL script from a TCL file and wait the end of execution to return
Declare Function TCLScriptExecuteWithPriority Lib "XPS_Q8_drivers.dll" (ByVal SocketIndex As Long, ByVal TCLFileName As String, ByVal TaskName As String, ByVal TaskPriorityLevel As String, ByVal ParametersList As String) As Integer '  Execute a TCL script with defined priority
Declare Function TCLScriptKill Lib "XPS_Q8_drivers.dll" (ByVal SocketIndex As Long, ByVal TaskName As String) As Integer '  Kill TCL Task
Declare Function TCLScriptKillAll Lib "XPS_Q8_drivers.dll" (ByVal SocketIndex As Long) As Integer '  Kill all TCL Tasks
Declare Function TimerGet Lib "XPS_Q8_drivers.dll" (ByVal SocketIndex As Long, ByVal TimerName As String, FrequencyTicks As Integer) As Integer '  Get a timer
Declare Function TimerSet Lib "XPS_Q8_drivers.dll" (ByVal SocketIndex As Long, ByVal TimerName As String, ByVal FrequencyTicks As Integer) As Integer '  Set a timer
Declare Function Reboot Lib "XPS_Q8_drivers.dll" (ByVal SocketIndex As Long) As Integer '  Reboot the controller
Declare Function Login Lib "XPS_Q8_drivers.dll" (ByVal SocketIndex As Long, ByVal Name As String, ByVal Password As String) As Integer '  Log in
Declare Function CloseAllOtherSockets Lib "XPS_Q8_drivers.dll" (ByVal SocketIndex As Long) As Integer '  Close all socket beside the one used to send this command
Declare Function HardwareDateAndTimeGet Lib "XPS_Q8_drivers.dll" (ByVal SocketIndex As Long, ByVal DateAndTime As String) As Integer '  Return hardware date and time
Declare Function HardwareDateAndTimeSet Lib "XPS_Q8_drivers.dll" (ByVal SocketIndex As Long, ByVal DateAndTime As String) As Integer '  Set hardware date and time
Declare Function EventAdd Lib "XPS_Q8_drivers.dll" (ByVal SocketIndex As Long, ByVal PositionerName As String, ByVal EventName As String, ByVal EventParameter As String, ByVal ActionName As String, ByVal ActionParameter1 As String, ByVal ActionParameter2 As String, ByVal ActionParameter3 As String) As Integer '  ** OBSOLETE ** Add an event
Declare Function EventGet Lib "XPS_Q8_drivers.dll" (ByVal SocketIndex As Long, ByVal PositionerName As String, ByVal EventsAndActionsList As String) As Integer '  ** OBSOLETE ** Read events and actions list
Declare Function EventRemove Lib "XPS_Q8_drivers.dll" (ByVal SocketIndex As Long, ByVal PositionerName As String, ByVal EventName As String, ByVal EventParameter As String) As Integer '  ** OBSOLETE ** Delete an event
Declare Function EventWait Lib "XPS_Q8_drivers.dll" (ByVal SocketIndex As Long, ByVal PositionerName As String, ByVal EventName As String, ByVal EventParameter As String) As Integer '  ** OBSOLETE ** Wait an event
Declare Function EventExtendedConfigurationTriggerSet Lib "XPS_Q8_drivers.dll" (ByVal SocketIndex As Long, ByVal NbElements As Long, ByVal ExtendedEventNameList As String, ByVal EventParameter1 As String, ByVal EventParameter2 As String, ByVal EventParameter3 As String, ByVal EventParameter4 As String) As Integer '  Configure one or several events
Declare Function EventExtendedConfigurationTriggerGet Lib "XPS_Q8_drivers.dll" (ByVal SocketIndex As Long, ByVal EventTriggerConfiguration As String) As Integer '  Read the event configuration
Declare Function EventExtendedConfigurationActionSet Lib "XPS_Q8_drivers.dll" (ByVal SocketIndex As Long, ByVal NbElements As Long, ByVal ExtendedActionNameList As String, ByVal ActionParameter1 As String, ByVal ActionParameter2 As String, ByVal ActionParameter3 As String, ByVal ActionParameter4 As String) As Integer '  Configure one or several actions
Declare Function EventExtendedConfigurationActionGet Lib "XPS_Q8_drivers.dll" (ByVal SocketIndex As Long, ByVal ActionConfiguration As String) As Integer '  Read the action configuration
Declare Function EventExtendedStart Lib "XPS_Q8_drivers.dll" (ByVal SocketIndex As Long, ID As Integer) As Integer '  Launch the last event and action configuration and return an ID
Declare Function EventExtendedAllGet Lib "XPS_Q8_drivers.dll" (ByVal SocketIndex As Long, ByVal EventActionConfigurations As String) As Integer '  Read all event and action configurations
Declare Function EventExtendedGet Lib "XPS_Q8_drivers.dll" (ByVal SocketIndex As Long, ByVal ID As Integer, ByVal EventTriggerConfiguration As String, ByVal ActionConfiguration As String) As Integer '  Read the event and action configuration defined by ID
Declare Function EventExtendedRemove Lib "XPS_Q8_drivers.dll" (ByVal SocketIndex As Long, ByVal ID As Integer) As Integer '  Remove the event and action configuration defined by ID
Declare Function EventExtendedWait Lib "XPS_Q8_drivers.dll" (ByVal SocketIndex As Long) As Integer '  Wait events from the last event configuration
Declare Function GatheringConfigurationGet Lib "XPS_Q8_drivers.dll" (ByVal SocketIndex As Long, ByVal TypeName As String) As Integer ' Read different mnemonique type
Declare Function GatheringConfigurationSet Lib "XPS_Q8_drivers.dll" (ByVal SocketIndex As Long, ByVal NbElements As Long, ByVal TypeNameList As String) As Integer '  Configuration acquisition
Declare Function GatheringCurrentNumberGet Lib "XPS_Q8_drivers.dll" (ByVal SocketIndex As Long, CurrentNumber As Integer, MaximumSamplesNumber As Integer) As Integer '  Maximum number of samples and current number during acquisition
Declare Function GatheringStopAndSave Lib "XPS_Q8_drivers.dll" (ByVal SocketIndex As Long) As Integer '  Stop acquisition and save data
Declare Function GatheringDataAcquire Lib "XPS_Q8_drivers.dll" (ByVal SocketIndex As Long) As Integer '  Acquire a configured data
Declare Function GatheringDataGet Lib "XPS_Q8_drivers.dll" (ByVal SocketIndex As Long, ByVal IndexPoint As Integer, ByVal DataBufferLine As String) As Integer '  Get a data line from gathering buffer
Declare Function GatheringDataMultipleLinesGet Lib "XPS_Q8_drivers.dll" (ByVal SocketIndex As Long, ByVal IndexPoint As Integer, ByVal NumberOfLines As Integer, ByVal DataBufferLine As String) As Integer '  Get multiple data lines from gathering buffer
Declare Function GatheringReset Lib "XPS_Q8_drivers.dll" (ByVal SocketIndex As Long) As Integer '  Empty the gathered data in memory to start new gathering from scratch
Declare Function GatheringRun Lib "XPS_Q8_drivers.dll" (ByVal SocketIndex As Long, ByVal DataNumber As Integer, ByVal Divisor As Integer) As Integer '  Start a new gathering
Declare Function GatheringRunAppend Lib "XPS_Q8_drivers.dll" (ByVal SocketIndex As Long) As Integer '  Re-start the stopped gathering to add new data
Declare Function GatheringStop Lib "XPS_Q8_drivers.dll" (ByVal SocketIndex As Long) As Integer '  Stop the data gathering (without saving to file)
Declare Function GatheringExternalConfigurationSet Lib "XPS_Q8_drivers.dll" (ByVal SocketIndex As Long, ByVal NbElements As Long, ByVal TypeNameList As String) As Integer '  Configuration acquisition
Declare Function GatheringExternalConfigurationGet Lib "XPS_Q8_drivers.dll" (ByVal SocketIndex As Long, ByVal TypeName As String) As Integer '  Read different mnemonique type
Declare Function GatheringExternalCurrentNumberGet Lib "XPS_Q8_drivers.dll" (ByVal SocketIndex As Long, CurrentNumber As Integer, MaximumSamplesNumber As Integer) As Integer '  Maximum number of samples and current number during acquisition
Declare Function GatheringExternalDataGet Lib "XPS_Q8_drivers.dll" (ByVal SocketIndex As Long, ByVal IndexPoint As Integer, ByVal DataBufferLine As String) As Integer '  Get a data line from external gathering buffer
Declare Function GatheringExternalStopAndSave Lib "XPS_Q8_drivers.dll" (ByVal SocketIndex As Long) As Integer '  Stop acquisition and save data
Declare Function GlobalArrayGet Lib "XPS_Q8_drivers.dll" (ByVal SocketIndex As Long, ByVal Number As Integer, ByVal ValueString As String) As Integer '  Get global array value
Declare Function GlobalArraySet Lib "XPS_Q8_drivers.dll" (ByVal SocketIndex As Long, ByVal Number As Integer, ByVal ValueString As String) As Integer '  Set global array value
Declare Function DoubleGlobalArrayGet Lib "XPS_Q8_drivers.dll" (ByVal SocketIndex As Long, ByVal Number As Integer, DoubleValue As Double) As Integer '  Get double global array value
Declare Function DoubleGlobalArraySet Lib "XPS_Q8_drivers.dll" (ByVal SocketIndex As Long, ByVal Number As Integer, ByVal DoubleValue As Double) As Integer '  Set double global array value
Declare Function GPIOAnalogGet Lib "XPS_Q8_drivers.dll" (ByVal SocketIndex As Long, ByVal NbElements As Long, ByVal GPIONameList As String, AnalogValue As Double) As Integer '  Read analog input or analog output for one or few input
Declare Function GPIOAnalogSet Lib "XPS_Q8_drivers.dll" (ByVal SocketIndex As Long, ByVal NbElements As Long, ByVal GPIONameList As String, AnalogOutputValue As Double) As Integer '  Set analog output for one or few output
Declare Function GPIOAnalogGainGet Lib "XPS_Q8_drivers.dll" (ByVal SocketIndex As Long, ByVal NbElements As Long, ByVal GPIONameList As String, AnalogInputGainValue As Integer) As Integer '  Read analog input gain (1, 2, 4 or 8) for one or few input
Declare Function GPIOAnalogGainSet Lib "XPS_Q8_drivers.dll" (ByVal SocketIndex As Long, ByVal NbElements As Long, ByVal GPIONameList As String, AnalogInputGainValue As Integer) As Integer '  Set analog input gain (1, 2, 4 or 8) for one or few input
Declare Function GPIODigitalGet Lib "XPS_Q8_drivers.dll" (ByVal SocketIndex As Long, ByVal GPIOName As String, DigitalValue As UShort) As Integer '  Read digital output or digital input 
Declare Function GPIODigitalSet Lib "XPS_Q8_drivers.dll" (ByVal SocketIndex As Long, ByVal GPIOName As String, ByVal Mask As UShort, ByVal DigitalOutputValue As UShort) As Integer '  Set Digital Output for one or few output TTL
Declare Function GroupAccelerationSetpointGet Lib "XPS_Q8_drivers.dll" (ByVal SocketIndex As Long, ByVal GroupName As String, ByVal NbElements As Long, SetpointAcceleration As Double) As Integer '  Return setpoint accelerations
Declare Function GroupAnalogTrackingModeEnable Lib "XPS_Q8_drivers.dll" (ByVal SocketIndex As Long, ByVal GroupName As String, ByVal TypeName As String) As Integer '  Enable Analog Tracking mode on selected group
Declare Function GroupAnalogTrackingModeDisable Lib "XPS_Q8_drivers.dll" (ByVal SocketIndex As Long, ByVal GroupName As String) As Integer '  Disable Analog Tracking mode on selected group
Declare Function GroupCorrectorOutputGet Lib "XPS_Q8_drivers.dll" (ByVal SocketIndex As Long, ByVal GroupName As String, ByVal NbElements As Long, CorrectorOutput As Double) As Integer '  Return corrector outputs
Declare Function GroupCurrentFollowingErrorGet Lib "XPS_Q8_drivers.dll" (ByVal SocketIndex As Long, ByVal GroupName As String, ByVal NbElements As Long, CurrentFollowingError As Double) As Integer '  Return current following errors
Declare Function GroupHomeSearch Lib "XPS_Q8_drivers.dll" (ByVal SocketIndex As Long, ByVal GroupName As String) As Integer '  Start home search sequence
Declare Function GroupHomeSearchAndRelativeMove Lib "XPS_Q8_drivers.dll" (ByVal SocketIndex As Long, ByVal GroupName As String, ByVal NbElements As Long, TargetDisplacement As Double) As Integer '  Start home search sequence and execute a displacement
Declare Function GroupInitialize Lib "XPS_Q8_drivers.dll" (ByVal SocketIndex As Long, ByVal GroupName As String) As Integer '  Start the initialization
Declare Function GroupInitializeNoEncoderReset Lib "XPS_Q8_drivers.dll" (ByVal SocketIndex As Long, ByVal GroupName As String) As Integer '  Group initialization with no encoder reset
Declare Function GroupInitializeWithEncoderCalibration Lib "XPS_Q8_drivers.dll" (ByVal SocketIndex As Long, ByVal GroupName As String) As Integer '  Group initialization with encoder calibration
Declare Function GroupInterlockDisable Lib "XPS_Q8_drivers.dll" (ByVal SocketIndex As Long, ByVal GroupName As String) As Integer '  Set group interlock disable
Declare Function GroupInterlockEnable Lib "XPS_Q8_drivers.dll" (ByVal SocketIndex As Long, ByVal GroupName As String) As Integer '  Set group interlock enable
Declare Function GroupJogParametersSet Lib "XPS_Q8_drivers.dll" (ByVal SocketIndex As Long, ByVal GroupName As String, ByVal NbElements As Long, Velocity As Double, Acceleration As Double) As Integer '  Modify Jog parameters on selected group and activate the continuous move
Declare Function GroupJogParametersGet Lib "XPS_Q8_drivers.dll" (ByVal SocketIndex As Long, ByVal GroupName As String, ByVal NbElements As Long, Velocity As Double, Acceleration As Double) As Integer '  Get Jog parameters on selected group
Declare Function GroupJogCurrentGet Lib "XPS_Q8_drivers.dll" (ByVal SocketIndex As Long, ByVal GroupName As String, ByVal NbElements As Long, Velocity As Double, Acceleration As Double) As Integer '  Get Jog current on selected group
Declare Function GroupJogModeEnable Lib "XPS_Q8_drivers.dll" (ByVal SocketIndex As Long, ByVal GroupName As String) As Integer '  Enable Jog mode on selected group
Declare Function GroupJogModeDisable Lib "XPS_Q8_drivers.dll" (ByVal SocketIndex As Long, ByVal GroupName As String) As Integer '  Disable Jog mode on selected group
Declare Function GroupKill Lib "XPS_Q8_drivers.dll" (ByVal SocketIndex As Long, ByVal GroupName As String) As Integer '  Kill the group
Declare Function GroupMotionDisable Lib "XPS_Q8_drivers.dll" (ByVal SocketIndex As Long, ByVal GroupName As String) As Integer '  Set Motion disable on selected group
Declare Function GroupMotionEnable Lib "XPS_Q8_drivers.dll" (ByVal SocketIndex As Long, ByVal GroupName As String) As Integer '  Set Motion enable on selected group
Declare Function GroupMotionStatusGet Lib "XPS_Q8_drivers.dll" (ByVal SocketIndex As Long, ByVal GroupName As String, ByVal NbElements As Long, Status As Integer) As Integer '  Return group or positioner status
Declare Function GroupMoveAbort Lib "XPS_Q8_drivers.dll" (ByVal SocketIndex As Long, ByVal GroupName As String) As Integer '  Abort a move
Declare Function GroupMoveAbortFast Lib "XPS_Q8_drivers.dll" (ByVal SocketIndex As Long, ByVal GroupName As String, ByVal AccelerationMultiplier As Integer) As Integer '  Abort quickly a move
Declare Function GroupMoveAbsolute Lib "XPS_Q8_drivers.dll" (ByVal SocketIndex As Long, ByVal GroupName As String, ByVal NbElements As Long, TargetPosition As Double) As Integer '  Do an absolute move
Declare Function GroupMoveRelative Lib "XPS_Q8_drivers.dll" (ByVal SocketIndex As Long, ByVal GroupName As String, ByVal NbElements As Long, TargetDisplacement As Double) As Integer '  Do a relative move
Declare Function GroupPositionCorrectedProfilerGet Lib "XPS_Q8_drivers.dll" (ByVal SocketIndex As Long, ByVal GroupName As String, ByVal PositionX As Double, ByVal PositionY As Double, CorrectedProfilerPositionX As Double, CorrectedProfilerPositionY As Double) As Integer '  Return corrected profiler positions
Declare Function GroupPositionCurrentGet Lib "XPS_Q8_drivers.dll" (ByVal SocketIndex As Long, ByVal GroupName As String, ByVal NbElements As Long, CurrentEncoderPosition As Double) As Integer '  Return current positions
Declare Function GroupPositionPCORawEncoderGet Lib "XPS_Q8_drivers.dll" (ByVal SocketIndex As Long, ByVal GroupName As String, ByVal PositionX As Double, ByVal PositionY As Double, PCORawPositionX As Double, PCORawPositionY As Double) As Integer '  Return PCO raw encoder positions
Declare Function GroupPositionSetpointGet Lib "XPS_Q8_drivers.dll" (ByVal SocketIndex As Long, ByVal GroupName As String, ByVal NbElements As Long, SetPointPosition As Double) As Integer '  Return setpoint positions
Declare Function GroupPositionTargetGet Lib "XPS_Q8_drivers.dll" (ByVal SocketIndex As Long, ByVal GroupName As String, ByVal NbElements As Long, TargetPosition As Double) As Integer '  Return target positions
Declare Function GroupReferencingActionExecute Lib "XPS_Q8_drivers.dll" (ByVal SocketIndex As Long, ByVal PositionerName As String, ByVal ReferencingAction As String, ByVal ReferencingSensor As String, ByVal ReferencingParameter As Double) As Integer '  Execute an action in referencing mode
Declare Function GroupReferencingStart Lib "XPS_Q8_drivers.dll" (ByVal SocketIndex As Long, ByVal GroupName As String) As Integer '  Enter referencing mode
Declare Function GroupReferencingStop Lib "XPS_Q8_drivers.dll" (ByVal SocketIndex As Long, ByVal GroupName As String) As Integer '  Exit referencing mode
Declare Function GroupStatusGet Lib "XPS_Q8_drivers.dll" (ByVal SocketIndex As Long, ByVal GroupName As String, Status As Integer) As Integer '  Return group status
Declare Function GroupStatusStringGet Lib "XPS_Q8_drivers.dll" (ByVal SocketIndex As Long, ByVal GroupStatusCode As Integer, ByVal GroupStatusString As String) As Integer '  Return the group status string corresponding to the group status code
Declare Function GroupVelocityCurrentGet Lib "XPS_Q8_drivers.dll" (ByVal SocketIndex As Long, ByVal GroupName As String, ByVal NbElements As Long, CurrentVelocity As Double) As Integer '  Return current velocities
Declare Function KillAll Lib "XPS_Q8_drivers.dll" (ByVal SocketIndex As Long) As Integer '  Put all groups in 'Not initialized' state
Declare Function RestartApplication Lib "XPS_Q8_drivers.dll" (ByVal SocketIndex As Long) As Integer '  Restart the Controller
Declare Function PositionerAnalogTrackingPositionParametersGet Lib "XPS_Q8_drivers.dll" (ByVal SocketIndex As Long, ByVal PositionerName As String, ByVal GPIOName As String, Offset As Double, ScaleValue As Double, Velocity As Double, Acceleration As Double) As Integer '  Read dynamic parameters for one axe of a group for a future analog tracking position
Declare Function PositionerAnalogTrackingPositionParametersSet Lib "XPS_Q8_drivers.dll" (ByVal SocketIndex As Long, ByVal PositionerName As String, ByVal GPIOName As String, ByVal Offset As Double, ByVal ScaleValue As Double, ByVal Velocity As Double, ByVal Acceleration As Double) As Integer '  Update dynamic parameters for one axe of a group for a future analog tracking position
Declare Function PositionerAnalogTrackingVelocityParametersGet Lib "XPS_Q8_drivers.dll" (ByVal SocketIndex As Long, ByVal PositionerName As String, ByVal GPIOName As String, Offset As Double, ScaleValue As Double, DeadBandThreshold As Double, Order As Integer, Velocity As Double, Acceleration As Double) As Integer '  Read dynamic parameters for one axe of a group for a future analog tracking velocity
Declare Function PositionerAnalogTrackingVelocityParametersSet Lib "XPS_Q8_drivers.dll" (ByVal SocketIndex As Long, ByVal PositionerName As String, ByVal GPIOName As String, ByVal Offset As Double, ByVal ScaleValue As Double, ByVal DeadBandThreshold As Double, ByVal Order As Integer, ByVal Velocity As Double, ByVal Acceleration As Double) As Integer '  Update dynamic parameters for one axe of a group for a future analog tracking velocity
Declare Function PositionerBacklashGet Lib "XPS_Q8_drivers.dll" (ByVal SocketIndex As Long, ByVal PositionerName As String, BacklashValue As Double, ByVal BacklaskStatus As String) As Integer '  Read backlash value and status
Declare Function PositionerBacklashSet Lib "XPS_Q8_drivers.dll" (ByVal SocketIndex As Long, ByVal PositionerName As String, ByVal BacklashValue As Double) As Integer '  Set backlash value
Declare Function PositionerBacklashEnable Lib "XPS_Q8_drivers.dll" (ByVal SocketIndex As Long, ByVal PositionerName As String) As Integer '  Enable the backlash
Declare Function PositionerBacklashDisable Lib "XPS_Q8_drivers.dll" (ByVal SocketIndex As Long, ByVal PositionerName As String) As Integer '  Disable the backlash
Declare Function PositionerCompensatedPCOAbort Lib "XPS_Q8_drivers.dll" (ByVal SocketIndex As Long, ByVal PositionerName As String) As Integer '  Abort CIE08 compensated PCO mode
Declare Function PositionerCompensatedPCOCurrentStatusGet Lib "XPS_Q8_drivers.dll" (ByVal SocketIndex As Long, ByVal PositionerName As String, Status As Integer) As Integer '  Get current status of CIE08 compensated PCO mode
Declare Function PositionerCompensatedPCOEnable Lib "XPS_Q8_drivers.dll" (ByVal SocketIndex As Long, ByVal PositionerName As String) As Integer '  Enable CIE08 compensated PCO mode execution
Declare Function PositionerCompensatedPCOFromFile Lib "XPS_Q8_drivers.dll" (ByVal SocketIndex As Long, ByVal PositionerName As String, ByVal DataFileName As String) As Integer '  Load file to CIE08 compensated PCO data buffer
Declare Function PositionerCompensatedPCOLoadToMemory Lib "XPS_Q8_drivers.dll" (ByVal SocketIndex As Long, ByVal PositionerName As String, ByVal DataLines As String) As Integer '  Load data lines to CIE08 compensated PCO data buffer
Declare Function PositionerCompensatedPCOMemoryReset Lib "XPS_Q8_drivers.dll" (ByVal SocketIndex As Long, ByVal PositionerName As String) As Integer '  Reset CIE08 compensated PCO data buffer
Declare Function PositionerCompensatedPCOPrepare Lib "XPS_Q8_drivers.dll" (ByVal SocketIndex As Long, ByVal PositionerName As String, ByVal ScanDirection As Integer, ByVal NbElements As Long, StartPosition As Double) As Integer '  Prepare data for CIE08 compensated PCO mode
Declare Function PositionerCompensatedPCOSet Lib "XPS_Q8_drivers.dll" (ByVal SocketIndex As Long, ByVal PositionerName As String, ByVal Start As Double, ByVal Stop As Double, ByVal Distance As Double, ByVal Width As Double) As Integer '  Set data to CIE08 compensated PCO data buffer
Declare Function PositionerCompensationFrequencyNotchsGet Lib "XPS_Q8_drivers.dll" (ByVal SocketIndex As Long, ByVal PositionerName As String, NotchFrequency1 As Double, NotchBandwidth1 As Double, NotchGain1 As Double, NotchFrequency2 As Double, NotchBandwidth2 As Double, NotchGain2 As Double, NotchFrequency3 As Double, NotchBandwidth3 As Double, NotchGain3 As Double) As Integer '  Read frequency compensation notch filters parameters 
Declare Function PositionerCompensationFrequencyNotchsSet Lib "XPS_Q8_drivers.dll" (ByVal SocketIndex As Long, ByVal PositionerName As String, ByVal NotchFrequency1 As Double, ByVal NotchBandwidth1 As Double, ByVal NotchGain1 As Double, ByVal NotchFrequency2 As Double, ByVal NotchBandwidth2 As Double, ByVal NotchGain2 As Double, ByVal NotchFrequency3 As Double, ByVal NotchBandwidth3 As Double, ByVal NotchGain3 As Double) As Integer '  Update frequency compensation notch filters parameters 
Declare Function PositionerCompensationLowPassTwoFilterGet Lib "XPS_Q8_drivers.dll" (ByVal SocketIndex As Long, ByVal PositionerName As String, CutOffFrequency As Double) As Integer '  Read second order low-pass filter parameters 
Declare Function PositionerCompensationLowPassTwoFilterSet Lib "XPS_Q8_drivers.dll" (ByVal SocketIndex As Long, ByVal PositionerName As String, ByVal CutOffFrequency As Double) As Integer '  Update second order low-pass filter parameters 
Declare Function PositionerCompensationNotchModeFiltersGet Lib "XPS_Q8_drivers.dll" (ByVal SocketIndex As Long, ByVal PositionerName As String, NotchModeFr1 As Double, NotchModeFa1 As Double, NotchModeZr1 As Double, NotchModeZa1 As Double, NotchModeFr2 As Double, NotchModeFa2 As Double, NotchModeZr2 As Double, NotchModeZa2 As Double) As Integer '  Read notch mode filters parameters 
Declare Function PositionerCompensationNotchModeFiltersSet Lib "XPS_Q8_drivers.dll" (ByVal SocketIndex As Long, ByVal PositionerName As String, ByVal NotchModeFr1 As Double, ByVal NotchModeFa1 As Double, ByVal NotchModeZr1 As Double, ByVal NotchModeZa1 As Double, ByVal NotchModeFr2 As Double, ByVal NotchModeFa2 As Double, ByVal NotchModeZr2 As Double, ByVal NotchModeZa2 As Double) As Integer '  Update notch mode filters parameters 
Declare Function PositionerCompensationPhaseCorrectionFiltersGet Lib "XPS_Q8_drivers.dll" (ByVal SocketIndex As Long, ByVal PositionerName As String, PhaseCorrectionFn1 As Double, PhaseCorrectionFd1 As Double, PhaseCorrectionGain1 As Double, PhaseCorrectionFn2 As Double, PhaseCorrectionFd2 As Double, PhaseCorrectionGain2 As Double) As Integer '  Read phase correction filters parameters 
Declare Function PositionerCompensationPhaseCorrectionFiltersSet Lib "XPS_Q8_drivers.dll" (ByVal SocketIndex As Long, ByVal PositionerName As String, ByVal PhaseCorrectionFn1 As Double, ByVal PhaseCorrectionFd1 As Double, ByVal PhaseCorrectionGain1 As Double, ByVal PhaseCorrectionFn2 As Double, ByVal PhaseCorrectionFd2 As Double, ByVal PhaseCorrectionGain2 As Double) As Integer '  Update phase correction filters parameters 
Declare Function PositionerCompensationSpatialPeriodicNotchsGet Lib "XPS_Q8_drivers.dll" (ByVal SocketIndex As Long, ByVal PositionerName As String, SpatialNotchStep1 As Double, SpatialNotchBandwidth1 As Double, SpatialNotchGain1 As Double, SpatialNotchStep2 As Double, SpatialNotchBandwidth2 As Double, SpatialNotchGain2 As Double, SpatialNotchStep3 As Double, SpatialNotchBandwidth3 As Double, SpatialNotchGain3 As Double) As Integer '  Read spatial compensation notch filters parameters 
Declare Function PositionerCompensationSpatialPeriodicNotchsSet Lib "XPS_Q8_drivers.dll" (ByVal SocketIndex As Long, ByVal PositionerName As String, ByVal SpatialNotchStep1 As Double, ByVal SpatialNotchBandwidth1 As Double, ByVal SpatialNotchGain1 As Double, ByVal SpatialNotchStep2 As Double, ByVal SpatialNotchBandwidth2 As Double, ByVal SpatialNotchGain2 As Double, ByVal SpatialNotchStep3 As Double, ByVal SpatialNotchBandwidth3 As Double, ByVal SpatialNotchGain3 As Double) As Integer '  Update spatial compensation notch filters parameters 
Declare Function PositionerCorrectorNotchFiltersSet Lib "XPS_Q8_drivers.dll" (ByVal SocketIndex As Long, ByVal PositionerName As String, ByVal NotchFrequency1 As Double, ByVal NotchBandwidth1 As Double, ByVal NotchGain1 As Double, ByVal NotchFrequency2 As Double, ByVal NotchBandwidth2 As Double, ByVal NotchGain2 As Double) As Integer '  Update filters parameters 
Declare Function PositionerCorrectorNotchFiltersGet Lib "XPS_Q8_drivers.dll" (ByVal SocketIndex As Long, ByVal PositionerName As String, NotchFrequency1 As Double, NotchBandwidth1 As Double, NotchGain1 As Double, NotchFrequency2 As Double, NotchBandwidth2 As Double, NotchGain2 As Double) As Integer '  Read filters parameters 
Declare Function PositionerCorrectorPIDBaseSet Lib "XPS_Q8_drivers.dll" (ByVal SocketIndex As Long, ByVal PositionerName As String, ByVal MovingMass As Double, ByVal StaticMass As Double, ByVal Viscosity As Double, ByVal Stiffness As Double) As Integer '  Update PIDBase parameters 
Declare Function PositionerCorrectorPIDBaseGet Lib "XPS_Q8_drivers.dll" (ByVal SocketIndex As Long, ByVal PositionerName As String, MovingMass As Double, StaticMass As Double, Viscosity As Double, Stiffness As Double) As Integer '  Read PIDBase parameters 
Declare Function PositionerCorrectorPIDFFAccelerationSet Lib "XPS_Q8_drivers.dll" (ByVal SocketIndex As Long, ByVal PositionerName As String, ByVal ClosedLoopStatus As Boolean, ByVal KP As Double, ByVal KI As Double, ByVal KD As Double, ByVal KS As Double, ByVal IntegrationTime As Double, ByVal DerivativeFilterCutOffFrequency As Double, ByVal GKP As Double, ByVal GKI As Double, ByVal GKD As Double, ByVal KForm As Double, ByVal KFeedForwardAcceleration As Double, ByVal KFeedForwardJerk As Double) As Integer '  Update corrector parameters
Declare Function PositionerCorrectorPIDFFAccelerationGet Lib "XPS_Q8_drivers.dll" (ByVal SocketIndex As Long, ByVal PositionerName As String, ClosedLoopStatus As Boolean, KP As Double, KI As Double, KD As Double, KS As Double, IntegrationTime As Double, DerivativeFilterCutOffFrequency As Double, GKP As Double, GKI As Double, GKD As Double, KForm As Double, KFeedForwardAcceleration As Double, KFeedForwardJerk As Double) As Integer '  Read corrector parameters
Declare Function PositionerCorrectorP2IDFFAccelerationSet Lib "XPS_Q8_drivers.dll" (ByVal SocketIndex As Long, ByVal PositionerName As String, ByVal ClosedLoopStatus As Boolean, ByVal KP As Double, ByVal KI As Double, ByVal KI2 As Double, ByVal KD As Double, ByVal KS As Double, ByVal IntegrationTime As Double, ByVal DerivativeFilterCutOffFrequency As Double, ByVal GKP As Double, ByVal GKI As Double, ByVal GKD As Double, ByVal KForm As Double, ByVal KFeedForwardAcceleration As Double, ByVal KFeedForwardJerk As Double, ByVal SetpointPositionDelay As Double) As Integer '  Update corrector parameters
Declare Function PositionerCorrectorP2IDFFAccelerationGet Lib "XPS_Q8_drivers.dll" (ByVal SocketIndex As Long, ByVal PositionerName As String, ClosedLoopStatus As Boolean, KP As Double, KI As Double, KI2 As Double, KD As Double, KS As Double, IntegrationTime As Double, DerivativeFilterCutOffFrequency As Double, GKP As Double, GKI As Double, GKD As Double, KForm As Double, KFeedForwardAcceleration As Double, KFeedForwardJerk As Double, SetpointPositionDelay As Double) As Integer '  Read corrector parameters
Declare Function PositionerCorrectorPIDFFVelocitySet Lib "XPS_Q8_drivers.dll" (ByVal SocketIndex As Long, ByVal PositionerName As String, ByVal ClosedLoopStatus As Boolean, ByVal KP As Double, ByVal KI As Double, ByVal KD As Double, ByVal KS As Double, ByVal IntegrationTime As Double, ByVal DerivativeFilterCutOffFrequency As Double, ByVal GKP As Double, ByVal GKI As Double, ByVal GKD As Double, ByVal KForm As Double, ByVal KFeedForwardVelocity As Double) As Integer '  Update corrector parameters
Declare Function PositionerCorrectorPIDFFVelocityGet Lib "XPS_Q8_drivers.dll" (ByVal SocketIndex As Long, ByVal PositionerName As String, ClosedLoopStatus As Boolean, KP As Double, KI As Double, KD As Double, KS As Double, IntegrationTime As Double, DerivativeFilterCutOffFrequency As Double, GKP As Double, GKI As Double, GKD As Double, KForm As Double, KFeedForwardVelocity As Double) As Integer '  Read corrector parameters
Declare Function PositionerCorrectorPIDDualFFVoltageSet Lib "XPS_Q8_drivers.dll" (ByVal SocketIndex As Long, ByVal PositionerName As String, ByVal ClosedLoopStatus As Boolean, ByVal KP As Double, ByVal KI As Double, ByVal KD As Double, ByVal KS As Double, ByVal IntegrationTime As Double, ByVal DerivativeFilterCutOffFrequency As Double, ByVal GKP As Double, ByVal GKI As Double, ByVal GKD As Double, ByVal KForm As Double, ByVal KFeedForwardVelocity As Double, ByVal KFeedForwardAcceleration As Double, ByVal Friction As Double) As Integer '  Update corrector parameters
Declare Function PositionerCorrectorPIDDualFFVoltageGet Lib "XPS_Q8_drivers.dll" (ByVal SocketIndex As Long, ByVal PositionerName As String, ClosedLoopStatus As Boolean, KP As Double, KI As Double, KD As Double, KS As Double, IntegrationTime As Double, DerivativeFilterCutOffFrequency As Double, GKP As Double, GKI As Double, GKD As Double, KForm As Double, KFeedForwardVelocity As Double, KFeedForwardAcceleration As Double, Friction As Double) As Integer '  Read corrector parameters
Declare Function PositionerCorrectorPIPositionSet Lib "XPS_Q8_drivers.dll" (ByVal SocketIndex As Long, ByVal PositionerName As String, ByVal ClosedLoopStatus As Boolean, ByVal KP As Double, ByVal KI As Double, ByVal IntegrationTime As Double) As Integer '  Update corrector parameters
Declare Function PositionerCorrectorPIPositionGet Lib "XPS_Q8_drivers.dll" (ByVal SocketIndex As Long, ByVal PositionerName As String, ClosedLoopStatus As Boolean, KP As Double, KI As Double, IntegrationTime As Double) As Integer '  Read corrector parameters
Declare Function PositionerCorrectorSR1AccelerationSet Lib "XPS_Q8_drivers.dll" (ByVal SocketIndex As Long, ByVal PositionerName As String, ByVal ClosedLoopStatus As Boolean, ByVal KP As Double, ByVal KI As Double, ByVal KV As Double, ByVal ObserverFrequency As Double, ByVal CompensationGainVelocity As Double, ByVal CompensationGainAcceleration As Double, ByVal CompensationGainJerk As Double) As Integer '  Update corrector parameters
Declare Function PositionerCorrectorSR1AccelerationGet Lib "XPS_Q8_drivers.dll" (ByVal SocketIndex As Long, ByVal PositionerName As String, ClosedLoopStatus As Boolean, KP As Double, KI As Double, KV As Double, ObserverFrequency As Double, CompensationGainVelocity As Double, CompensationGainAcceleration As Double, CompensationGainJerk As Double) As Integer '  Read corrector parameters
Declare Function PositionerCorrectorSR1ObserverAccelerationSet Lib "XPS_Q8_drivers.dll" (ByVal SocketIndex As Long, ByVal PositionerName As String, ByVal ParameterA As Double, ByVal ParameterB As Double, ByVal ParameterC As Double) As Integer '  Update SR1 corrector observer parameters
Declare Function PositionerCorrectorSR1ObserverAccelerationGet Lib "XPS_Q8_drivers.dll" (ByVal SocketIndex As Long, ByVal PositionerName As String, ParameterA As Double, ParameterB As Double, ParameterC As Double) As Integer '  Read SR1 corrector observer parameters
Declare Function PositionerCorrectorSR1OffsetAccelerationSet Lib "XPS_Q8_drivers.dll" (ByVal SocketIndex As Long, ByVal PositionerName As String, ByVal AccelerationOffset As Double) As Integer '  Update SR1 corrector output acceleration offset
Declare Function PositionerCorrectorSR1OffsetAccelerationGet Lib "XPS_Q8_drivers.dll" (ByVal SocketIndex As Long, ByVal PositionerName As String, AccelerationOffset As Double) As Integer '  Read SR1 corrector output acceleration offset
Declare Function PositionerCorrectorTypeGet Lib "XPS_Q8_drivers.dll" (ByVal SocketIndex As Long, ByVal PositionerName As String, ByVal CorrectorType As String) As Integer '  Read corrector type
Declare Function PositionerCurrentVelocityAccelerationFiltersSet Lib "XPS_Q8_drivers.dll" (ByVal SocketIndex As Long, ByVal PositionerName As String, ByVal CurrentVelocityCutOffFrequency As Double, ByVal CurrentAccelerationCutOffFrequency As Double) As Integer '  Set current velocity and acceleration cut off frequencies
Declare Function PositionerCurrentVelocityAccelerationFiltersGet Lib "XPS_Q8_drivers.dll" (ByVal SocketIndex As Long, ByVal PositionerName As String, CurrentVelocityCutOffFrequency As Double, CurrentAccelerationCutOffFrequency As Double) As Integer '  Get current velocity and acceleration cut off frequencies
Declare Function PositionerDriverFiltersGet Lib "XPS_Q8_drivers.dll" (ByVal SocketIndex As Long, ByVal PositionerName As String, KI As Double, NotchFrequency As Double, NotchBandwidth As Double, NotchGain As Double, LowpassFrequency As Double) As Integer '  Get driver filters parameters
Declare Function PositionerDriverFiltersSet Lib "XPS_Q8_drivers.dll" (ByVal SocketIndex As Long, ByVal PositionerName As String, ByVal KI As Double, ByVal NotchFrequency As Double, ByVal NotchBandwidth As Double, ByVal NotchGain As Double, ByVal LowpassFrequency As Double) As Integer '  Set driver filters parameters
Declare Function PositionerDriverPositionOffsetsGet Lib "XPS_Q8_drivers.dll" (ByVal SocketIndex As Long, ByVal PositionerName As String, StagePositionOffset As Double, GagePositionOffset As Double) As Integer '  Get driver stage and gage position offset
Declare Function PositionerDriverStatusGet Lib "XPS_Q8_drivers.dll" (ByVal SocketIndex As Long, ByVal PositionerName As String, DriverStatus As Integer) As Integer '  Read positioner driver status
Declare Function PositionerDriverStatusStringGet Lib "XPS_Q8_drivers.dll" (ByVal SocketIndex As Long, ByVal PositionerDriverStatus As Integer, ByVal PositionerDriverStatusString As String) As Integer '  Return the positioner driver status string corresponding to the positioner error code
Declare Function PositionerEncoderAmplitudeValuesGet Lib "XPS_Q8_drivers.dll" (ByVal SocketIndex As Long, ByVal PositionerName As String, CalibrationSinusAmplitude As Double, CurrentSinusAmplitude As Double, CalibrationCosinusAmplitude As Double, CurrentCosinusAmplitude As Double) As Integer '  Read analog interpolated encoder amplitude values
Declare Function PositionerEncoderCalibrationParametersGet Lib "XPS_Q8_drivers.dll" (ByVal SocketIndex As Long, ByVal PositionerName As String, SinusOffset As Double, CosinusOffset As Double, DifferentialGain As Double, PhaseCompensation As Double) As Integer '  Read analog interpolated encoder calibration parameters
Declare Function PositionerErrorGet Lib "XPS_Q8_drivers.dll" (ByVal SocketIndex As Long, ByVal PositionerName As String, ErrorCode As Integer) As Integer '  Read and clear positioner error code
Declare Function PositionerErrorRead Lib "XPS_Q8_drivers.dll" (ByVal SocketIndex As Long, ByVal PositionerName As String, ErrorCode As Integer) As Integer '  Read only positioner error code without clear it
Declare Function PositionerErrorStringGet Lib "XPS_Q8_drivers.dll" (ByVal SocketIndex As Long, ByVal PositionerErrorCode As Integer, ByVal PositionerErrorString As String) As Integer '  Return the positioner status string corresponding to the positioner error code
Declare Function PositionerExcitationSignalGet Lib "XPS_Q8_drivers.dll" (ByVal SocketIndex As Long, ByVal PositionerName As String, Mode As Integer, Frequency As Double, Amplitude As Double, Time As Double) As Integer '  Get excitation signal mode
Declare Function PositionerExcitationSignalSet Lib "XPS_Q8_drivers.dll" (ByVal SocketIndex As Long, ByVal PositionerName As String, ByVal Mode As Integer, ByVal Frequency As Double, ByVal Amplitude As Double, ByVal Time As Double) As Integer '  Set excitation signal mode
Declare Function PositionerHardwareStatusGet Lib "XPS_Q8_drivers.dll" (ByVal SocketIndex As Long, ByVal PositionerName As String, HardwareStatus As Integer) As Integer '  Read positioner hardware status
Declare Function PositionerHardwareStatusStringGet Lib "XPS_Q8_drivers.dll" (ByVal SocketIndex As Long, ByVal PositionerHardwareStatus As Integer, ByVal PositionerHardwareStatusString As String) As Integer '  Return the positioner hardware status string corresponding to the positioner error code
Declare Function PositionerHardInterpolatorFactorGet Lib "XPS_Q8_drivers.dll" (ByVal SocketIndex As Long, ByVal PositionerName As String, InterpolationFactor As Integer) As Integer '  Get hard interpolator parameters
Declare Function PositionerHardInterpolatorFactorSet Lib "XPS_Q8_drivers.dll" (ByVal SocketIndex As Long, ByVal PositionerName As String, ByVal InterpolationFactor As Integer) As Integer '  Set hard interpolator parameters
Declare Function PositionerHardInterpolatorPositionGet Lib "XPS_Q8_drivers.dll" (ByVal SocketIndex As Long, ByVal PositionerName As String, Position As Double) As Integer '  Read external latch position
Declare Function PositionerMaximumVelocityAndAccelerationGet Lib "XPS_Q8_drivers.dll" (ByVal SocketIndex As Long, ByVal PositionerName As String, MaximumVelocity As Double, MaximumAcceleration As Double) As Integer '  Return maximum velocity and acceleration of the positioner
Declare Function PositionerMotionDoneGet Lib "XPS_Q8_drivers.dll" (ByVal SocketIndex As Long, ByVal PositionerName As String, PositionWindow As Double, VelocityWindow As Double, CheckingTime As Double, MeanPeriod As Double, TimeOut As Double) As Integer '  Read motion done parameters
Declare Function PositionerMotionDoneSet Lib "XPS_Q8_drivers.dll" (ByVal SocketIndex As Long, ByVal PositionerName As String, ByVal PositionWindow As Double, ByVal VelocityWindow As Double, ByVal CheckingTime As Double, ByVal MeanPeriod As Double, ByVal TimeOut As Double) As Integer '  Update motion done parameters
Declare Function PositionerPositionCompareAquadBAlwaysEnable Lib "XPS_Q8_drivers.dll" (ByVal SocketIndex As Long, ByVal PositionerName As String) As Integer '  Enable AquadB signal in always mode
Declare Function PositionerPositionCompareAquadBWindowedGet Lib "XPS_Q8_drivers.dll" (ByVal SocketIndex As Long, ByVal PositionerName As String, MinimumPosition As Double, MaximumPosition As Double, EnableState As Boolean) As Integer '  Read position compare AquadB windowed parameters
Declare Function PositionerPositionCompareAquadBWindowedSet Lib "XPS_Q8_drivers.dll" (ByVal SocketIndex As Long, ByVal PositionerName As String, ByVal MinimumPosition As Double, ByVal MaximumPosition As Double) As Integer '  Set position compare AquadB windowed parameters
Declare Function PositionerPositionCompareGet Lib "XPS_Q8_drivers.dll" (ByVal SocketIndex As Long, ByVal PositionerName As String, MinimumPosition As Double, MaximumPosition As Double, PositionStep As Double, EnableState As Boolean) As Integer '  Read position compare parameters
Declare Function PositionerPositionCompareSet Lib "XPS_Q8_drivers.dll" (ByVal SocketIndex As Long, ByVal PositionerName As String, ByVal MinimumPosition As Double, ByVal MaximumPosition As Double, ByVal PositionStep As Double) As Integer '  Set position compare parameters
Declare Function PositionerPositionCompareEnable Lib "XPS_Q8_drivers.dll" (ByVal SocketIndex As Long, ByVal PositionerName As String) As Integer '  Enable position compare
Declare Function PositionerPositionCompareDisable Lib "XPS_Q8_drivers.dll" (ByVal SocketIndex As Long, ByVal PositionerName As String) As Integer '  Disable position compare
Declare Function PositionerPositionComparePulseParametersGet Lib "XPS_Q8_drivers.dll" (ByVal SocketIndex As Long, ByVal PositionerName As String, PCOPulseWidth As Double, EncoderSettlingTime As Double) As Integer '  Get position compare PCO pulse parameters
Declare Function PositionerPositionComparePulseParametersSet Lib "XPS_Q8_drivers.dll" (ByVal SocketIndex As Long, ByVal PositionerName As String, ByVal PCOPulseWidth As Double, ByVal EncoderSettlingTime As Double) As Integer '  Set position compare PCO pulse parameters
Declare Function PositionerPositionCompareScanAccelerationLimitGet Lib "XPS_Q8_drivers.dll" (ByVal SocketIndex As Long, ByVal PositionerName As String, ScanAccelerationLimit As Double) As Integer '  Get position compare scan acceleration limit
Declare Function PositionerPositionCompareScanAccelerationLimitSet Lib "XPS_Q8_drivers.dll" (ByVal SocketIndex As Long, ByVal PositionerName As String, ByVal ScanAccelerationLimit As Double) As Integer '  Set position compare scan acceleration limit
Declare Function PositionerPreCorrectorExcitationSignalGet Lib "XPS_Q8_drivers.dll" (ByVal SocketIndex As Long, ByVal PositionerName As String, Frequency As Double, Amplitude As Double, Time As Double) As Integer '  Get pre-corrector excitation signal mode
Declare Function PositionerPreCorrectorExcitationSignalSet Lib "XPS_Q8_drivers.dll" (ByVal SocketIndex As Long, ByVal PositionerName As String, ByVal Frequency As Double, ByVal Amplitude As Double, ByVal Time As Double) As Integer '  Set pre-corrector excitation signal mode
Declare Function PositionerRawEncoderPositionGet Lib "XPS_Q8_drivers.dll" (ByVal SocketIndex As Long, ByVal PositionerName As String, ByVal UserEncoderPosition As Double, RawEncoderPosition As Double) As Integer '  Get the raw encoder position
Declare Function PositionersEncoderIndexDifferenceGet Lib "XPS_Q8_drivers.dll" (ByVal SocketIndex As Long, ByVal PositionerName As String, distance As Double) As Integer '  Return the difference between index of primary axis and secondary axis (only after homesearch)
Declare Function PositionerSGammaExactVelocityAjustedDisplacementGet Lib "XPS_Q8_drivers.dll" (ByVal SocketIndex As Long, ByVal PositionerName As String, ByVal DesiredDisplacement As Double, AdjustedDisplacement As Double) As Integer '  Return adjusted displacement to get exact velocity
Declare Function PositionerSGammaParametersGet Lib "XPS_Q8_drivers.dll" (ByVal SocketIndex As Long, ByVal PositionerName As String, Velocity As Double, Acceleration As Double, MinimumTjerkTime As Double, MaximumTjerkTime As Double) As Integer '  Read dynamic parameters for one axe of a group for a future displacement 
Declare Function PositionerSGammaParametersSet Lib "XPS_Q8_drivers.dll" (ByVal SocketIndex As Long, ByVal PositionerName As String, ByVal Velocity As Double, ByVal Acceleration As Double, ByVal MinimumTjerkTime As Double, ByVal MaximumTjerkTime As Double) As Integer '  Update dynamic parameters for one axe of a group for a future displacement
Declare Function PositionerSGammaPreviousMotionTimesGet Lib "XPS_Q8_drivers.dll" (ByVal SocketIndex As Long, ByVal PositionerName As String, SettingTime As Double, SettlingTime As Double) As Integer '  Read SettingTime and SettlingTime
Declare Function PositionerStageParameterGet Lib "XPS_Q8_drivers.dll" (ByVal SocketIndex As Long, ByVal PositionerName As String, ByVal ParameterName As String, ByVal ParameterValue As String) As Integer '  Return the stage parameter
Declare Function PositionerStageParameterSet Lib "XPS_Q8_drivers.dll" (ByVal SocketIndex As Long, ByVal PositionerName As String, ByVal ParameterName As String, ByVal ParameterValue As String) As Integer '  Save the stage parameter
Declare Function PositionerTimeFlasherGet Lib "XPS_Q8_drivers.dll" (ByVal SocketIndex As Long, ByVal PositionerName As String, MinimumPosition As Double, MaximumPosition As Double, PositionStep As Double, EnableState As Boolean) As Integer '  Read time flasher parameters
Declare Function PositionerTimeFlasherSet Lib "XPS_Q8_drivers.dll" (ByVal SocketIndex As Long, ByVal PositionerName As String, ByVal MinimumPosition As Double, ByVal MaximumPosition As Double, ByVal TimeInterval As Double) As Integer '  Set time flasher parameters
Declare Function PositionerTimeFlasherEnable Lib "XPS_Q8_drivers.dll" (ByVal SocketIndex As Long, ByVal PositionerName As String) As Integer '  Enable time flasher
Declare Function PositionerTimeFlasherDisable Lib "XPS_Q8_drivers.dll" (ByVal SocketIndex As Long, ByVal PositionerName As String) As Integer '  Disable time flasher
Declare Function PositionerUserTravelLimitsGet Lib "XPS_Q8_drivers.dll" (ByVal SocketIndex As Long, ByVal PositionerName As String, UserMinimumTarget As Double, UserMaximumTarget As Double) As Integer '  Read UserMinimumTarget and UserMaximumTarget
Declare Function PositionerUserTravelLimitsSet Lib "XPS_Q8_drivers.dll" (ByVal SocketIndex As Long, ByVal PositionerName As String, ByVal UserMinimumTarget As Double, ByVal UserMaximumTarget As Double) As Integer '  Update UserMinimumTarget and UserMaximumTarget
Declare Function PositionerWarningFollowingErrorSet Lib "XPS_Q8_drivers.dll" (ByVal SocketIndex As Long, ByVal PositionerName As String, ByVal WarningFollowingError As Double) As Integer '  Set positioner warning following error limit
Declare Function PositionerWarningFollowingErrorGet Lib "XPS_Q8_drivers.dll" (ByVal SocketIndex As Long, ByVal PositionerName As String, WarningFollowingError As Double) As Integer '  Get positioner warning following error limit
Declare Function PositionerCorrectorAutoTuning Lib "XPS_Q8_drivers.dll" (ByVal SocketIndex As Long, ByVal PositionerName As String, ByVal TuningMode As Integer, KP As Double, KI As Double, KD As Double) As Integer '  Astrom&Hagglund based auto-tuning
Declare Function PositionerAccelerationAutoScaling Lib "XPS_Q8_drivers.dll" (ByVal SocketIndex As Long, ByVal PositionerName As String, Scaling As Double) As Integer '  Astrom&Hagglund based auto-scaling
Declare Function MultipleAxesPVTVerification Lib "XPS_Q8_drivers.dll" (ByVal SocketIndex As Long, ByVal GroupName As String, ByVal TrajectoryFileName As String) As Integer '  Multiple axes PVT trajectory verification
Declare Function MultipleAxesPVTVerificationResultGet Lib "XPS_Q8_drivers.dll" (ByVal SocketIndex As Long, ByVal PositionerName As String, ByVal FileName As String, MinimumPosition As Double, MaximumPosition As Double, MaximumVelocity As Double, MaximumAcceleration As Double) As Integer '  Multiple axes PVT trajectory verification result get
Declare Function MultipleAxesPVTExecution Lib "XPS_Q8_drivers.dll" (ByVal SocketIndex As Long, ByVal GroupName As String, ByVal TrajectoryFileName As String, ByVal ExecutionNumber As Integer) As Integer '  Multiple axes PVT trajectory execution
Declare Function MultipleAxesPVTParametersGet Lib "XPS_Q8_drivers.dll" (ByVal SocketIndex As Long, ByVal GroupName As String, ByVal FileName As String, CurrentElementNumber As Integer) As Integer '  Multiple axes PVT trajectory get parameters
Declare Function MultipleAxesPVTPulseOutputSet Lib "XPS_Q8_drivers.dll" (ByVal SocketIndex As Long, ByVal GroupName As String, ByVal StartElement As Integer, ByVal EndElement As Integer, ByVal TimeInterval As Double) As Integer '  Configure pulse output on trajectory
Declare Function MultipleAxesPVTPulseOutputGet Lib "XPS_Q8_drivers.dll" (ByVal SocketIndex As Long, ByVal GroupName As String, StartElement As Integer, EndElement As Integer, TimeInterval As Double) As Integer '  Get pulse output on trajectory configuration
Declare Function MultipleAxesPVTLoadToMemory Lib "XPS_Q8_drivers.dll" (ByVal SocketIndex As Long, ByVal GroupName As String, ByVal TrajectoryPart As String) As Integer '  Multiple Axes Load PVT trajectory through function
Declare Function MultipleAxesPVTResetInMemory Lib "XPS_Q8_drivers.dll" (ByVal SocketIndex As Long, ByVal GroupName As String) As Integer '  Multiple Axes PVT trajectory reset in memory
Declare Function SingleAxisSlaveModeEnable Lib "XPS_Q8_drivers.dll" (ByVal SocketIndex As Long, ByVal GroupName As String) As Integer '  Enable the slave mode
Declare Function SingleAxisSlaveModeDisable Lib "XPS_Q8_drivers.dll" (ByVal SocketIndex As Long, ByVal GroupName As String) As Integer '  Disable the slave mode
Declare Function SingleAxisSlaveParametersSet Lib "XPS_Q8_drivers.dll" (ByVal SocketIndex As Long, ByVal GroupName As String, ByVal PositionerName As String, ByVal Ratio As Double) As Integer '  Set slave parameters
Declare Function SingleAxisSlaveParametersGet Lib "XPS_Q8_drivers.dll" (ByVal SocketIndex As Long, ByVal GroupName As String, ByVal PositionerName As String, Ratio As Double) As Integer '  Get slave parameters
Declare Function SingleAxisThetaClampDisable Lib "XPS_Q8_drivers.dll" (ByVal SocketIndex As Long, ByVal GroupName As String) As Integer '  Set clamping disable on selected group
Declare Function SingleAxisThetaClampEnable Lib "XPS_Q8_drivers.dll" (ByVal SocketIndex As Long, ByVal GroupName As String) As Integer '  Set clamping enable on selected group
Declare Function SingleAxisThetaSlaveModeEnable Lib "XPS_Q8_drivers.dll" (ByVal SocketIndex As Long, ByVal GroupName As String) As Integer '  Enable the slave mode
Declare Function SingleAxisThetaSlaveModeDisable Lib "XPS_Q8_drivers.dll" (ByVal SocketIndex As Long, ByVal GroupName As String) As Integer '  Disable the slave mode
Declare Function SingleAxisThetaSlaveParametersSet Lib "XPS_Q8_drivers.dll" (ByVal SocketIndex As Long, ByVal GroupName As String, ByVal PositionerName As String, ByVal Ratio As Double) As Integer '  Set slave parameters
Declare Function SingleAxisThetaSlaveParametersGet Lib "XPS_Q8_drivers.dll" (ByVal SocketIndex As Long, ByVal GroupName As String, ByVal PositionerName As String, Ratio As Double) As Integer '  Get slave parameters
Declare Function SpindleSlaveModeEnable Lib "XPS_Q8_drivers.dll" (ByVal SocketIndex As Long, ByVal GroupName As String) As Integer '  Enable the slave mode
Declare Function SpindleSlaveModeDisable Lib "XPS_Q8_drivers.dll" (ByVal SocketIndex As Long, ByVal GroupName As String) As Integer '  Disable the slave mode
Declare Function SpindleSlaveParametersSet Lib "XPS_Q8_drivers.dll" (ByVal SocketIndex As Long, ByVal GroupName As String, ByVal PositionerName As String, ByVal Ratio As Double) As Integer '  Set slave parameters
Declare Function SpindleSlaveParametersGet Lib "XPS_Q8_drivers.dll" (ByVal SocketIndex As Long, ByVal GroupName As String, ByVal PositionerName As String, Ratio As Double) As Integer '  Get slave parameters
Declare Function GroupSpinParametersSet Lib "XPS_Q8_drivers.dll" (ByVal SocketIndex As Long, ByVal GroupName As String, ByVal Velocity As Double, ByVal Acceleration As Double) As Integer '  Modify Spin parameters on selected group and activate the continuous move
Declare Function GroupSpinParametersGet Lib "XPS_Q8_drivers.dll" (ByVal SocketIndex As Long, ByVal GroupName As String, Velocity As Double, Acceleration As Double) As Integer '  Get Spin parameters on selected group
Declare Function GroupSpinCurrentGet Lib "XPS_Q8_drivers.dll" (ByVal SocketIndex As Long, ByVal GroupName As String, Velocity As Double, Acceleration As Double) As Integer '  Get Spin current on selected group
Declare Function GroupSpinModeStop Lib "XPS_Q8_drivers.dll" (ByVal SocketIndex As Long, ByVal GroupName As String, ByVal Acceleration As Double) As Integer '  Stop Spin mode on selected group with specified acceleration
Declare Function XYLineArcVerification Lib "XPS_Q8_drivers.dll" (ByVal SocketIndex As Long, ByVal GroupName As String, ByVal TrajectoryFileName As String) As Integer '  XY trajectory verification
Declare Function XYLineArcVerificationResultGet Lib "XPS_Q8_drivers.dll" (ByVal SocketIndex As Long, ByVal PositionerName As String, ByVal FileName As String, MinimumPosition As Double, MaximumPosition As Double, MaximumVelocity As Double, MaximumAcceleration As Double) As Integer '  XY trajectory verification result get
Declare Function XYLineArcExecution Lib "XPS_Q8_drivers.dll" (ByVal SocketIndex As Long, ByVal GroupName As String, ByVal TrajectoryFileName As String, ByVal Velocity As Double, ByVal Acceleration As Double, ByVal ExecutionNumber As Integer) As Integer '  XY trajectory execution
Declare Function XYLineArcParametersGet Lib "XPS_Q8_drivers.dll" (ByVal SocketIndex As Long, ByVal GroupName As String, ByVal FileName As String, Velocity As Double, Acceleration As Double, CurrentElementNumber As Integer) As Integer '  XY trajectory get parameters
Declare Function XYLineArcPulseOutputSet Lib "XPS_Q8_drivers.dll" (ByVal SocketIndex As Long, ByVal GroupName As String, ByVal StartLength As Double, ByVal EndLength As Double, ByVal PathLengthInterval As Double) As Integer '  Configure pulse output on trajectory
Declare Function XYLineArcPulseOutputGet Lib "XPS_Q8_drivers.dll" (ByVal SocketIndex As Long, ByVal GroupName As String, StartLength As Double, EndLength As Double, PathLengthInterval As Double) As Integer '  Get pulse output on trajectory configuration
Declare Function XYPVTVerification Lib "XPS_Q8_drivers.dll" (ByVal SocketIndex As Long, ByVal GroupName As String, ByVal TrajectoryFileName As String) As Integer '  XY PVT trajectory verification
Declare Function XYPVTVerificationResultGet Lib "XPS_Q8_drivers.dll" (ByVal SocketIndex As Long, ByVal PositionerName As String, ByVal FileName As String, MinimumPosition As Double, MaximumPosition As Double, MaximumVelocity As Double, MaximumAcceleration As Double) As Integer '  XY PVT trajectory verification result get
Declare Function XYPVTExecution Lib "XPS_Q8_drivers.dll" (ByVal SocketIndex As Long, ByVal GroupName As String, ByVal TrajectoryFileName As String, ByVal ExecutionNumber As Integer) As Integer '  XY PVT trajectory execution
Declare Function XYPVTParametersGet Lib "XPS_Q8_drivers.dll" (ByVal SocketIndex As Long, ByVal GroupName As String, ByVal FileName As String, CurrentElementNumber As Integer) As Integer '  XY PVT trajectory get parameters
Declare Function XYPVTPulseOutputSet Lib "XPS_Q8_drivers.dll" (ByVal SocketIndex As Long, ByVal GroupName As String, ByVal StartElement As Integer, ByVal EndElement As Integer, ByVal TimeInterval As Double) As Integer '  Configure pulse output on trajectory
Declare Function XYPVTPulseOutputGet Lib "XPS_Q8_drivers.dll" (ByVal SocketIndex As Long, ByVal GroupName As String, StartElement As Integer, EndElement As Integer, TimeInterval As Double) As Integer '  Get pulse output on trajectory configuration
Declare Function XYPVTLoadToMemory Lib "XPS_Q8_drivers.dll" (ByVal SocketIndex As Long, ByVal GroupName As String, ByVal TrajectoryPart As String) As Integer '  XY Load PVT trajectory through function
Declare Function XYPVTResetInMemory Lib "XPS_Q8_drivers.dll" (ByVal SocketIndex As Long, ByVal GroupName As String) As Integer '  XY PVT trajectory reset in memory
Declare Function XYZGroupPositionCorrectedProfilerGet Lib "XPS_Q8_drivers.dll" (ByVal SocketIndex As Long, ByVal GroupName As String, ByVal PositionX As Double, ByVal PositionY As Double, ByVal PositionZ As Double, CorrectedProfilerPositionX As Double, CorrectedProfilerPositionY As Double, CorrectedProfilerPositionZ As Double) As Integer '  Return corrected profiler positions
Declare Function XYZGroupPositionPCORawEncoderGet Lib "XPS_Q8_drivers.dll" (ByVal SocketIndex As Long, ByVal GroupName As String, ByVal PositionX As Double, ByVal PositionY As Double, ByVal PositionZ As Double, PCORawPositionX As Double, PCORawPositionY As Double, PCORawPositionZ As Double) As Integer '  Return PCO raw encoder positions
Declare Function XYZSplineVerification Lib "XPS_Q8_drivers.dll" (ByVal SocketIndex As Long, ByVal GroupName As String, ByVal TrajectoryFileName As String) As Integer '  XYZ trajectory verifivation
Declare Function XYZSplineVerificationResultGet Lib "XPS_Q8_drivers.dll" (ByVal SocketIndex As Long, ByVal PositionerName As String, ByVal FileName As String, MinimumPosition As Double, MaximumPosition As Double, MaximumVelocity As Double, MaximumAcceleration As Double) As Integer '  XYZ trajectory verification result get
Declare Function XYZSplineExecution Lib "XPS_Q8_drivers.dll" (ByVal SocketIndex As Long, ByVal GroupName As String, ByVal TrajectoryFileName As String, ByVal Velocity As Double, ByVal Acceleration As Double) As Integer '  XYZ trajectory execution
Declare Function XYZSplineParametersGet Lib "XPS_Q8_drivers.dll" (ByVal SocketIndex As Long, ByVal GroupName As String, ByVal FileName As String, Velocity As Double, Acceleration As Double, CurrentElementNumber As Integer) As Integer '  XYZ trajectory get parameters
Declare Function TZPVTVerification Lib "XPS_Q8_drivers.dll" (ByVal SocketIndex As Long, ByVal GroupName As String, ByVal TrajectoryFileName As String) As Integer '  TZ PVT trajectory verification
Declare Function TZPVTVerificationResultGet Lib "XPS_Q8_drivers.dll" (ByVal SocketIndex As Long, ByVal PositionerName As String, ByVal FileName As String, MinimumPosition As Double, MaximumPosition As Double, MaximumVelocity As Double, MaximumAcceleration As Double) As Integer '  TZ PVT trajectory verification result get
Declare Function TZPVTExecution Lib "XPS_Q8_drivers.dll" (ByVal SocketIndex As Long, ByVal GroupName As String, ByVal TrajectoryFileName As String, ByVal ExecutionNumber As Integer) As Integer '  TZ PVT trajectory execution
Declare Function TZPVTParametersGet Lib "XPS_Q8_drivers.dll" (ByVal SocketIndex As Long, ByVal GroupName As String, ByVal FileName As String, CurrentElementNumber As Integer) As Integer '  TZ PVT trajectory get parameters
Declare Function TZPVTPulseOutputSet Lib "XPS_Q8_drivers.dll" (ByVal SocketIndex As Long, ByVal GroupName As String, ByVal StartElement As Integer, ByVal EndElement As Integer, ByVal TimeInterval As Double) As Integer '  Configure pulse output on trajectory
Declare Function TZPVTPulseOutputGet Lib "XPS_Q8_drivers.dll" (ByVal SocketIndex As Long, ByVal GroupName As String, StartElement As Integer, EndElement As Integer, TimeInterval As Double) As Integer '  Get pulse output on trajectory configuration
Declare Function TZPVTLoadToMemory Lib "XPS_Q8_drivers.dll" (ByVal SocketIndex As Long, ByVal GroupName As String, ByVal TrajectoryPart As String) As Integer '  TZ Load PVT trajectory through function
Declare Function TZPVTResetInMemory Lib "XPS_Q8_drivers.dll" (ByVal SocketIndex As Long, ByVal GroupName As String) As Integer '  TZ PVT trajectory reset in memory
Declare Function TZFocusModeEnable Lib "XPS_Q8_drivers.dll" (ByVal SocketIndex As Long, ByVal GroupName As String) As Integer '  Enable the focus mode
Declare Function TZFocusModeDisable Lib "XPS_Q8_drivers.dll" (ByVal SocketIndex As Long, ByVal GroupName As String) As Integer '  Disable the focus mode
Declare Function TZTrackingUserMaximumZZZTargetDifferenceGet Lib "XPS_Q8_drivers.dll" (ByVal SocketIndex As Long, ByVal GroupName As String, UserMaximumZZZTargetDifference As Double) As Integer '  Get user maximum ZZZ target difference for tracking control
Declare Function TZTrackingUserMaximumZZZTargetDifferenceSet Lib "XPS_Q8_drivers.dll" (ByVal SocketIndex As Long, ByVal GroupName As String, ByVal UserMaximumZZZTargetDifference As Double) As Integer '  Set user maximum ZZZ target difference for tracking control
Declare Function FocusProcessSocketReserve Lib "XPS_Q8_drivers.dll" (ByVal SocketIndex As Long) As Integer '  Set user maximum ZZZ target difference for tracking control
Declare Function FocusProcessSocketFree Lib "XPS_Q8_drivers.dll" (ByVal SocketIndex As Long) As Integer '  Set user maximum ZZZ target difference for tracking control
Declare Function PositionerMotorOutputOffsetGet Lib "XPS_Q8_drivers.dll" (ByVal SocketIndex As Long, ByVal PositionerName As String, PrimaryDAC1 As Double, PrimaryDAC2 As Double, SecondaryDAC1 As Double, SecondaryDAC2 As Double) As Integer '  Get soft (user defined) motor output DAC offsets
Declare Function PositionerMotorOutputOffsetSet Lib "XPS_Q8_drivers.dll" (ByVal SocketIndex As Long, ByVal PositionerName As String, ByVal PrimaryDAC1 As Double, ByVal PrimaryDAC2 As Double, ByVal SecondaryDAC1 As Double, ByVal SecondaryDAC2 As Double) As Integer '  Set soft (user defined) motor output DAC offsets
Declare Function SingleAxisThetaPositionRawGet Lib "XPS_Q8_drivers.dll" (ByVal SocketIndex As Long, ByVal GroupName As String, RawEncoderPosition1 As Double, RawEncoderPosition2 As Double, RawEncoderPosition3 As Double) As Integer '  Get raw encoder positions for single axis theta encoder
Declare Function EEPROMCIESet Lib "XPS_Q8_drivers.dll" (ByVal SocketIndex As Long, ByVal CardNumber As Integer, ByVal ReferenceString As String) As Integer '  Get raw encoder positions for single axis theta encoder
Declare Function EEPROMDACOffsetCIESet Lib "XPS_Q8_drivers.dll" (ByVal SocketIndex As Long, ByVal PlugNumber As Integer, ByVal DAC1Offset As Double, ByVal DAC2Offset As Double) As Integer '  Get raw encoder positions for single axis theta encoder
Declare Function EEPROMDriverSet Lib "XPS_Q8_drivers.dll" (ByVal SocketIndex As Long, ByVal PlugNumber As Integer, ByVal ReferenceString As String) As Integer '  Get raw encoder positions for single axis theta encoder
Declare Function EEPROMINTSet Lib "XPS_Q8_drivers.dll" (ByVal SocketIndex As Long, ByVal CardNumber As Integer, ByVal ReferenceString As String) As Integer '  Get raw encoder positions for single axis theta encoder
Declare Function CPUCoreAndBoardSupplyVoltagesGet Lib "XPS_Q8_drivers.dll" (ByVal SocketIndex As Long, VoltageCPUCore As Double, SupplyVoltage1P5V As Double, SupplyVoltage3P3V As Double, SupplyVoltage5V As Double, SupplyVoltage12V As Double, SupplyVoltageM12V As Double, SupplyVoltageM5V As Double, SupplyVoltage5VSB As Double) As Integer '  Get raw encoder positions for single axis theta encoder
Declare Function CPUTemperatureAndFanSpeedGet Lib "XPS_Q8_drivers.dll" (ByVal SocketIndex As Long, CPUTemperature As Double, CPUFanSpeed As Double) As Integer '  Get raw encoder positions for single axis theta encoder
Declare Function ActionListGet Lib "XPS_Q8_drivers.dll" (ByVal SocketIndex As Long, ByVal ActionList As String) As Integer '  Action list
Declare Function ActionExtendedListGet Lib "XPS_Q8_drivers.dll" (ByVal SocketIndex As Long, ByVal ActionList As String) As Integer '  Action extended list
Declare Function APIExtendedListGet Lib "XPS_Q8_drivers.dll" (ByVal SocketIndex As Long, ByVal Method As String) As Integer '  API method list
Declare Function APIListGet Lib "XPS_Q8_drivers.dll" (ByVal SocketIndex As Long, ByVal Method As String) As Integer '  API method list without extended API
Declare Function ControllerStatusListGet Lib "XPS_Q8_drivers.dll" (ByVal SocketIndex As Long, ByVal ControllerStatusList As String) As Integer '  Controller status list
Declare Function ErrorListGet Lib "XPS_Q8_drivers.dll" (ByVal SocketIndex As Long, ByVal ErrorsList As String) As Integer '  Error list
Declare Function EventListGet Lib "XPS_Q8_drivers.dll" (ByVal SocketIndex As Long, ByVal EventList As String) As Integer '  General event list
Declare Function GatheringListGet Lib "XPS_Q8_drivers.dll" (ByVal SocketIndex As Long, ByVal list As String) As Integer '  Gathering type list
Declare Function GatheringExtendedListGet Lib "XPS_Q8_drivers.dll" (ByVal SocketIndex As Long, ByVal list As String) As Integer '  Gathering type extended list
Declare Function GatheringExternalListGet Lib "XPS_Q8_drivers.dll" (ByVal SocketIndex As Long, ByVal list As String) As Integer '  External Gathering type list
Declare Function GroupStatusListGet Lib "XPS_Q8_drivers.dll" (ByVal SocketIndex As Long, ByVal GroupStatusList As String) As Integer '  Group status list
Declare Function HardwareInternalListGet Lib "XPS_Q8_drivers.dll" (ByVal SocketIndex As Long, ByVal InternalHardwareList As String) As Integer '  Internal hardware list
Declare Function HardwareDriverAndStageGet Lib "XPS_Q8_drivers.dll" (ByVal SocketIndex As Long, ByVal PlugNumber As Integer, ByVal DriverName As String, ByVal StageName As String) As Integer '  Smart hardware
Declare Function ObjectsListGet Lib "XPS_Q8_drivers.dll" (ByVal SocketIndex As Long, ByVal ObjectsList As String) As Integer '  Group name and positioner name
Declare Function PositionerErrorListGet Lib "XPS_Q8_drivers.dll" (ByVal SocketIndex As Long, ByVal PositionerErrorList As String) As Integer '  Positioner error list
Declare Function PositionerHardwareStatusListGet Lib "XPS_Q8_drivers.dll" (ByVal SocketIndex As Long, ByVal PositionerHardwareStatusList As String) As Integer '  Positioner hardware status list
Declare Function PositionerDriverStatusListGet Lib "XPS_Q8_drivers.dll" (ByVal SocketIndex As Long, ByVal PositionerDriverStatusList As String) As Integer '  Positioner driver status list
Declare Function ReferencingActionListGet Lib "XPS_Q8_drivers.dll" (ByVal SocketIndex As Long, ByVal list As String) As Integer '  Get referencing action list
Declare Function ReferencingSensorListGet Lib "XPS_Q8_drivers.dll" (ByVal SocketIndex As Long, ByVal list As String) As Integer '  Get referencing sensor list
Declare Function PrepareForUpdate Lib "XPS_Q8_drivers.dll" (ByVal SocketIndex As Long) As Integer '  Prepare for update controller
Declare Function GatheringUserDatasGet Lib "XPS_Q8_drivers.dll" (ByVal SocketIndex As Long, UserData1 As Double, UserData2 As Double, UserData3 As Double, UserData4 As Double, UserData5 As Double, UserData6 As Double, UserData7 As Double, UserData8 As Double) As Integer '  Return UserDatas values
Declare Function ControllerMotionKernelMinMaxTimeLoadGet Lib "XPS_Q8_drivers.dll" (ByVal SocketIndex As Long, MinimumCPUTotalLoadRatio As Double, MaximumCPUTotalLoadRatio As Double, MinimumCPUCorrectorLoadRatio As Double, MaximumCPUCorrectorLoadRatio As Double, MinimumCPUProfilerLoadRatio As Double, MaximumCPUProfilerLoadRatio As Double, MinimumCPUServitudesLoadRatio As Double, MaximumCPUServitudesLoadRatio As Double) As Integer '  Get controller motion kernel minimum and maximum time load
Declare Function ControllerMotionKernelMinMaxTimeLoadReset Lib "XPS_Q8_drivers.dll" (ByVal SocketIndex As Long) As Integer '  Reset controller motion kernel min/max time load
Declare Function ControllerMotionKernelPeriodMinMaxGet Lib "XPS_Q8_drivers.dll" (ByVal SocketIndex As Long, MinimumCorrectorPeriod As Double, MaximumCorrectorPeriod As Double, MinimumProfilerPeriod As Double, MaximumProfilerPeriod As Double, MinimumServitudesPeriod As Double, MaximumServitudesPeriod As Double) As Integer '  Get controller motion kernel min/max periods
Declare Function ControllerMotionKernelPeriodMinMaxReset Lib "XPS_Q8_drivers.dll" (ByVal SocketIndex As Long) As Integer '  Reset controller motion kernel min/max periods
Declare Function SocketsStatusGet Lib "XPS_Q8_drivers.dll" (ByVal SocketIndex As Long, ByVal SocketsStatus As String) As Integer '  Get sockets current status
Declare Function TestTCP Lib "XPS_Q8_drivers.dll" (ByVal SocketIndex As Long, ByVal InputString As String, ByVal ReturnString As String) As Integer '  Test TCP/IP transfert
Declare Function ISRCorrectorCompensateOverrunNumberGet Lib "XPS_Q8_drivers.dll" (ByVal SocketIndex As Long, CorrectorOverrunCompensationNumber As Integer, CorrectorOverrunCompensationMissNumber As Integer) As Integer '  Get ISR Corrector Compensate Overrun Number
Declare Function ISRCorrectorCompensateOverrunNumberReset Lib "XPS_Q8_drivers.dll" (ByVal SocketIndex As Long) As Integer '  Reset ISR Corrector Compensate Overrun Number
Declare Function OptionalModuleExecute Lib "XPS_Q8_drivers.dll" (ByVal SocketIndex As Long, ByVal ModuleFileName As String) As Integer '  Execute an optional module
Declare Function OptionalModuleKill Lib "XPS_Q8_drivers.dll" (ByVal SocketIndex As Long, ByVal TaskName As String) As Integer '  Kill an optional module
