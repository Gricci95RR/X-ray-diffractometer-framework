; number of alignment (optional) _ description of the alignment _ DEVICE TO MOVE

; --- Beam Alignment ---
[XRAY_SOURCE_STAGE_ROTATIONAL]
SCRIPT_NAME = SearchSourceSensorAlignment.py
FILENAME_TO_ALIGNMENT_POSITION = Result_Alignment_Source.csv
STEP_SIZE = 0.05
RANGE = 3.8
DURATION_ACQUISITION = 30
DATA_LOG_FILENAME = alignment_Source_Sensor.csv
ERASE_CSV_CONTENT = 1

[1st_Linear_Alignment_MONOCHROMATOR_STAGE_LINEAR]
SCRIPT_NAME = SearchMonochromatorLinearAlignment.py
FILENAME_TO_X_ALIGNMENT_POSITION = Result_Alignment_XAxis_Monochromator.csv
START_POSITION = 85
STEP_SIZE = 0.05
RANGE = -3
DURATION_ACQUISITION = 30
DATA_LOG_FILENAME = alignment_Monochromator_linear.csv
ERASE_CSV_CONTENT = 1

[2nd_Linear_Alignment_MONOCHROMATOR_STAGE_LINEAR] ; linear alignment fine tuning
; Scan Linear Axis
START_OFFSET = -0.5
RANGE = 0.5
STEP_SIZE = 0.05

[2nd_Linear_Alignment_MONOCHROMATOR_STAGE_ROTATIONAL] ; linear alignment fine tuning
SCRIPT_NAME = SearchMonochromatorRotationalAlignment.py
FILENAME_TO_OMEGA_ALIGNMENT_POSITION = Result_Alignment_OmegaAxis_Monochromator.csv
FILENAME_TO_SLOPES = Slopes_alignment_XOmegaAxes_Monochromator.csv
; Scan Rotational Axis
STEP_SIZE = 0.02
RANGE = 1.35
DURATION_ACQUISITION = 30
DATA_LOG_FILENAME = alignment_Monochromator_rotational.csv
ERASE_CSV_CONTENT = 1

[Bragg_Peak_Search_MONOCHROMATOR_STAGE_ROTATIONAL]
SCRIPT_NAME = SearchMonochromatorBraggPeak.py
FILENAME_TO_ALIGNMENT_POSITION = Result_Bragg_Peak_Angle_Monochromator.csv
STEP_SIZE = 0.01
RANGE = 1.4
DURATION_ACQUISITION = 1
DATA_LOG_FILENAME = alignment_Monochromator_Bragg_Peak.csv
ERASE_CSV_CONTENT = 1

[Linear_Alignment_SLIT_STAGE_LINEAR]
SCRIPT_NAME = SearchSlitLinearAlignment.py
FILENAME_LINEAR_ALIGNMENT_POSITION = Result_alignment_XAxis_Slit.csv
; Scan Linear Axis
START_POSITION = -74
STEP_SIZE = 0.1
RANGE = -6
DURATION_ACQUISITION = 1
DATA_LOG_FILENAME = alignment_Slit.csv
ERASE_CSV_CONTENT = 1

[Rotational_Alignment_SLIT_STAGE_ROTATIONAL]
FILENAME_ROTATIONAL_ALIGNMENT_POSITION = Result_alignment_RotAxis_Slit.csv
FILENAME_FWHM = results_Slit_alignment.csv
START_POSITION = 48
; Scan Rotational Axis
START_OFFSET = 0  ; Offset to the current linear position
STOP_OFFSET = 4 ; Range
STEP_SIZE = 0.5

[AUTOCOLLIMATOR_STAGE_ROTATIONAL]
STEP_SIZE = 
RANGE = 
DURATION_ACQUISITION = 1
DATA_LOG_FILENAME = 
ERASE_CSV_CONTENT = 1

; --- Crystal Alignment ---
[xAxis_Alignment_CRYSTAL_STAGE]
SCRIPT_NAME = SearchCrystalXAxisAlignment.py
FILENAME_TO_X_ALIGNMENT_POSITION = Result_Alignment_XAxis_Crystal.csv
START_POSITION_STEPPER = 176.20
START_POSITION_HXP_X = -10
START_POSITION_HXP_Y = 0
START_POSITION_HXP_Z = 0
START_POSITION_HXP_U = 0
START_POSITION_HXP_V = 0
START_POSITION_HXP_W = 0
STEP_SIZE = 0.1
RANGE = -1.5
DURATION_ACQUISITION = 5
DATA_LOG_FILENAME = alignment_Crystal_xAxis.csv
ERASE_CSV_CONTENT = 1

[zAxis_Alignment_CRYSTAL_STAGE]
SCRIPT_NAME = SearchCrystalZAxisAlignment.py
FILENAME_TO_Z_ALIGNMENT_POSITION = Result_Alignment_ZAxis_Crystal.csv
START_POSITION_STEPPER = 176.20
START_POSITION_HXP_Z = -7.8
STEP_SIZE = 0.1
RANGE = 14.0
DURATION_ACQUISITION = 45
DATA_LOG_FILENAME = alignment_Crystal_zAxis.csv
ERASE_CSV_CONTENT = 1

[yAxis_Alignment_CRYSTAL_STAGE]
SCRIPT_NAME = SearchCrystalWAxisAlignment.py
SCRIPT_NAME_OFFSET = SearchCrystalWOffsetAxisAlignment.py
FILENAME_TO_W_ALIGNMENT_POSITION = Result_min_w_axis_position.csv
FILENAME_TO_X_ALIGNMENT_POSITION = Result_min_x_axis_position.csv
FILENAME_TO_Y_SLOPES = Slopes_Linear_Fit_YAxis.csv
START_POSITION_STEPPER = 176.20
START_POSITION_HXP_X = ;take from pre-computed position
START_POSITION_HXP_Y = -1.5
START_POSITION_HXP_Z = ;take from pre-computed position
START_POSITION_HXP_U = 0
START_POSITION_HXP_V = 0
START_POSITION_HXP_W = -0.4
STEP_SIZE_W = 0.1
STEP_SIZE_Y = 0.1
RANGE_W = +0.2
RANGE_Y = +3
DURATION_ACQUISITION = 3
DURATION_ACQUISITION_Y = 3
DATA_LOG_FILENAME_W_SCAN = alignment_Crystal_wAxis.csv
DATA_LOG_FILENAME_Y_SCAN = alignment_Crystal_yAxis.csv
ERASE_CSV_CONTENT = 1

[yWAxis_Alignment_CRYSTAL_STAGE]
SCRIPT_NAME = SearchCrystalYWAxesAlignment.py
FILENAME_TO_Y_ALIGNMENT_POSITION = Result_Alignment_YAxis_Crystal.csv
FILENAME_TO_STANDARD_DEVIATION_RESULT = Result_Standard_Deviation_Slopes_Crystal.csv
FILENAME_TO_SLOPESFILE = Result_Alignment_YWAxis_Slopes_Crystal.csv
THRESHOLD_STD_DEVIATION = 1.4
; Scan Y-Axis
START_POSITION_SCAN_HXP_Y = -1
STEP_SIZE_SCAN_HXP_Y = 0.2
RANGE_SCAN_HXP_Y = 2.5
; Scan W-Axis
START_POSITION_HXP_W = -6
STEP_SIZE = 0.1
RANGE = 10
DURATION_ACQUISITION = 60
DATA_LOG_FILENAME = alignment_Crystal_YWAxes.csv
ERASE_CSV_CONTENT = 1

[Braggs_Peak_Search_CRYSTAL_STAGE]
SCRIPT_NAME = SearchCrystalBraggPeak.py
FILENAME_TO_BRAGG_ANGLE = Result_Bragg_Peak_Angle_Crystal.csv
; Scan W-Axis
START_POSITION_HXP_W = -7;8.39 ; 8.39
STEP_SIZE = 0.05
RANGE = -2
DURATION_ACQUISITION = 1
DATA_LOG_FILENAME = alignment_Crystal_Bragg_Peak.csv
ERASE_CSV_CONTENT = 1

[yAxis_Fine_Alignment_CRYSTAL_STAGE]
SCRIPT_NAME_FULLY_OPENED_BEAM = ComputeFullyOpenedBeam.py
FILENAME_TO_FULLY_OPENED_BEAM = Result_Fully_Opened_Beam.csv
SCRIPT_NAME = SearchYAxisFineAlignment.py
FILENAME_TO_Y_ALIGNMENT_POSITION = Result_Alignment_YAxis_Crystal.csv
FILENAME_TO_Yin = Yin_Data_Alignment_YAxis_Crystal.csv
FILENAME_TO_Yout = Yout_Data_Alignment_YAxis_Crystal.csv
CRYSTAL_WIDTH = 4 ; mm
; Scan Y-Axis
STEP_SIZE_SCAN_HXP_Y = 0.025
RANGE_SCAN_HXP_Y = 0.1
; Scan W-Axis
OFFSET_FROM_BRAGG_ANGLE = 3
STEP_SIZE = 0.20
RANGE = 6
DURATION_ACQUISITION = 1
DATA_LOG_FILENAME = alignment_Crystal_YAxisFine.csv
ERASE_CSV_CONTENT = 1

[checkAlignmentInFlippedOrientation_CRYSTAL_STAGE]
THRESHOLD = 0.1

; --- Crystal Measurements ---
[Bending_Angle_CRYSTAL_STAGE]
SCRIPT_NAME = BendingAngle.py
FILENAME_TO_BENDING_ANGLE = Result_Bending_Angle_Crystal.csv
FILENAME_TO_PEAKS = Peaks_W_Y_Positions_Bending_Angle_Crystal.csv
; Scan Y-Axis
STEP_SIZE_SCAN_HXP_Y = 0.5
RANGE_SCAN_HXP_Y = 2
; Scan W-Axis
OFFSET_FROM_BRAGG_ANGLE = 1
STEP_SIZE = 0.05
RANGE = -2.5
DURATION_ACQUISITION = 1
DATA_LOG_FILENAME = measurement_Crystal_BendingAngle.csv
ERASE_CSV_CONTENT = 1

[Miscut_Angle_CRYSTAL_STAGE]
SCRIPT_NAME = MiscutAngle.py
FILENAME_TO_MISCUT_ANGLE = Result_Miscut_Angle_Crystal.csv
FILENAME_TO_PEAKS = Peaks_W_Y_Positions_Miscut_Angle_Crystal.csv
START_POSITION_STEPPER = 180
; Scan Y-Axis
STEP_SIZE_SCAN_HXP_Y = 0.5
RANGE_SCAN_HXP_Y = 2
; Scan W-Axis
OFFSET_FROM_BRAGG_ANGLE = 1
STEP_SIZE = 0.05
RANGE = -2
DURATION_ACQUISITION = 1
DATA_LOG_FILENAME = measurement_Crystal_MiscutAngle.csv
ERASE_CSV_CONTENT = 1

[Torsion_Angle_CRYSTAL_STAGE]
SCRIPT_NAME = TorsionAngle.py
FILENAME_TO_TORSION_ANGLE = Result_Torsion_Angle_Crystal.csv
FILENAME_TO_PEAKS = Peaks_Positions_Torsion_Angle_Crystal.csv
START_POSITION_STEPPER = 0
START_POSITION_HXP_Y = 0
START_POSITION_HXP_Z = 1
; Scan Z-Axis
STEP_SIZE_SCAN_HXP_Z = 0.5
RANGE_SCAN_HXP_Z = 2
; Scan W-Axis
OFFSET_FROM_BRAGG_ANGLE = 1
STEP_SIZE = 0.05
RANGE = -2
DURATION_ACQUISITION = 1
DATA_LOG_FILENAME = measurement_Crystal_MiscutAngle.csv
ERASE_CSV_CONTENT = 1
